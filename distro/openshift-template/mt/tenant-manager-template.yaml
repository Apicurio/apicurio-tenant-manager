apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: tenant-manager-registry
labels:
  template: tenant-manager-registry
objects:

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: tenant-manager
      template: tenant-manager-registry
      component: tenant-manager-envoy
    annotations:
      description: Exposes and load balances the tenant-manager pods going through envoy beforehand
      service.alpha.openshift.io/serving-cert-secret-name: tenant-manager-envoy-tls
    name: tenant-manager-envoy
  spec:
    ports:
    - port: 9001
      protocol: TCP
      targetPort: 9001
      name: api-envoy
    selector:
      app: tenant-manager
      template: tenant-manager-registry

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: tenant-manager
      template: tenant-manager-registry
      component: tenant-manager-envoy-metrics
    name: tenant-manager-envoy-metrics
  spec:
    ports:
    - port: 9000
      protocol: TCP
      targetPort: 9000
      name: metrics-envoy
    selector:
      app: tenant-manager
      template: tenant-manager-registry

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: tenant-manager
      template: tenant-manager-registry
      component: tenant-manager
    name: tenant-manager
  spec:
    ports:
    - port: 8585
      protocol: TCP
      targetPort: 8585
      name: http
    selector:
      app: tenant-manager
      template: tenant-manager-registry

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: tenant-manager
      template: tenant-manager-registry
    name: tenant-manager
  spec:
    selector:
      matchLabels:
        app: tenant-manager
        template: tenant-manager-registry
    replicas: ${{TENANT_MANAGER_REPLICAS}}
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: tenant-manager
          template: tenant-manager-registry
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - tenant-manager
                  - key: template
                    operator: In
                    values:
                    - tenant-manager-registry
                topologyKey: failure-domain.beta.kubernetes.io/zone
              weight: 100
        serviceAccount: ${SERVICE_ACCOUNT_NAME}
        serviceAccountName: ${SERVICE_ACCOUNT_NAME}
        volumes:
        - name: envoy-config
          configMap:
            name: ${TENANT_MANAGER_ENVOY_CONFIG_CM_NAME}
        - name: envoy-unix-sockets
          emptyDir:
            medium: Memory
        - name: db-ssl-ca
          secret:
            secretName: ${DATABASE_SSL_CA_SECRET_NAME}
        - name: envoy-tls
          secret:
            secretName: tenant-manager-envoy-tls

        containers:
        - name: tenant-manager
          image: ${IMAGE_REGISTRY}/${TENANT_MANAGER_IMAGE_REPOSITORY}:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: db-ssl-ca
            mountPath: /config/db-ssl-ca.pem
            subPath: ca.pem
          env:
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name:  ${DATABASE_SECRET_NAME}
                key:  db.host
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name:  ${DATABASE_SECRET_NAME}
                key:  db.port
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name:  ${DATABASE_SECRET_NAME}
                key:  db.name
          - name: DATASOURCE_URL
            value: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=require&sslrootcert=/config/db-ssl-ca.pem
          - name: DATASOURCE_USERNAME
            valueFrom:
              secretKeyRef:
                name:  ${DATABASE_SECRET_NAME}
                key:  db.user
          - name: DATASOURCE_PASSWORD
            valueFrom:
              secretKeyRef:
                name:  ${DATABASE_SECRET_NAME}
                key:  db.password

          - name: QUARKUS_HTTP_PORT
            value: "8585"
          - name: LOG_LEVEL
            value: ${TENANT_MANAGER_QUARKUS_LOG_LEVEL}
          - name: TENANT_MANAGER_LOG_LEVEL
            value: ${TENANT_MANAGER_LOG_LEVEL}
          - name: ENABLE_ACCESS_LOG
            value: ${ENABLE_ACCESS_LOG}

          # Sentry/GlitchTip
          - name: ENABLE_SENTRY
            value: ${ENABLE_SENTRY}
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: ${SENTRY_CONFIG_SECRET_NAME}
                key: ${SENTRY_CONFIG_SECRET_KEY_DSN}

          - name: AUTH_ENABLED
            value: ${AUTH_ENABLED}
          - name: KEYCLOAK_URL
            value: ${KEYCLOAK_URL}
          - name: KEYCLOAK_REALM
            value: ${KEYCLOAK_REALM}
          - name: KEYCLOAK_API_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: ${TENANT_MANAGER_CLIENT_SECRET_NAME}
                key: client-id
          - name: TENANT_MANAGER_REAPER_CHECK_PERIOD_DURATION_EXPR
            value: ${TENANT_MANAGER_REAPER_CHECK_PERIOD_DURATION_EXPR}
          - name: TENANT_MANAGER_REAPER_PERIOD_SECONDS
            value: ${TENANT_MANAGER_REAPER_PERIOD_SECONDS}
          - name: TENANT_MANAGER_REAPER_MAX_TENANTS_REAPED_COUNT
            value: ${TENANT_MANAGER_REAPER_MAX_TENANTS_REAPED_COUNT}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8585
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          ports:
          - containerPort: 8585
            protocol: TCP
            name: http
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /q/health/ready
              port: 8585
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: ${TENANT_MANAGER_CPU_LIMIT}
              memory: ${TENANT_MANAGER_MEMORY_LIMIT}
            requests:
              cpu: ${TENANT_MANAGER_CPU_REQUEST}
              memory: ${TENANT_MANAGER_MEMORY_REQUEST}
          terminationMessagePath: /dev/termination-log
        - name: envoy
          image: ${ENVOY_IMAGE}
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: envoy-tls
            mountPath: /secrets/tls
          - name: envoy-config
            mountPath: /configs/envoy
          - name: envoy-unix-sockets
            mountPath: /sockets
          command:
          - envoy
          - --config-path
          - /configs/envoy/main.yaml
          ports:
          - name: api-envoy
            protocol: TCP
            containerPort: 9001
          - name: metrics-envoy
            protocol: TCP
            containerPort: 9000
          livenessProbe:
            httpGet:
              path: /ready
              port: 9000
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 9000
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          resources:
            requests:
              memory: 256Mi
              cpu: 250m
            limits:
              memory: 512Mi
              cpu: 500m

- kind: PodDisruptionBudget
  apiVersion: policy/v1
  metadata:
    name: tenant-manager-pdb
  spec:
    maxUnavailabe: "50%"
    selector:
      matchLabels:
        app: tenant-manager
        template: tenant-manager-registry

parameters:

- name: TENANT_MANAGER_LOG_LEVEL
  value: DEBUG

- name: TENANT_MANAGER_QUARKUS_LOG_LEVEL
  value: INFO

- name: ENABLE_ACCESS_LOG
  value: "false"

- name: SERVICE_ACCOUNT_NAME
  displayName: Service Account to use for the deployment
  required: true

- name: REPLICAS
  description: Number of replicas for apicurio-registry deployment.
  value: "3"
- name: TENANT_MANAGER_REPLICAS
  description: Number of replicas for tenant-manager deployment.
  value: "3"

- name: TENANT_MANAGER_IMAGE_REPOSITORY
  displayName: Tenant Manager Image Repository
  required: true

- name: IMAGE_REGISTRY
  displayName: Image Registry
  required: true

- name: IMAGE_TAG
  displayName: Image tag for Apicurio Registry and Tenant Manager
  value: latest

- name: TENANT_MANAGER_MEMORY_REQUEST
  description: Tenant Manager Memory request.
  value: "600Mi"

- name: TENANT_MANAGER_MEMORY_LIMIT
  description: Tenant Manager  Memory limit.
  value: "1000Mi"

- name: TENANT_MANAGER_CPU_REQUEST
  description: Tenant Manager  CPU request.
  value: "200m"

- name: TENANT_MANAGER_CPU_LIMIT
  description: Tenant Manager CPU limit.
  value: "500m"

- name: DATABASE_SECRET_NAME
  description: Secret name with database connection details
  required: true
- name: DATABASE_SSL_CA_SECRET_NAME
  description: Secret name with database SSL CA
  required: true

- name: TENANT_MANAGER_CLIENT_SECRET_NAME
  description: k8s secret name with client-id and client-secret to access tenant-manager
  required: true

- name: AUTH_ENABLED
  description: flag to enable/disable authentication
  value: "false"
- name: KEYCLOAK_URL
  description: Keycloak base url
  value: "http://localhost:8090"
- name: KEYCLOAK_REALM
  description: Keycloak realm
  value: "apicurio-registry"
- name: KEYCLOAK_API_CLIENT_ID
  description: client id for Apicurio Registry API
  value: registry-api

- name: ENVOY_IMAGE
  description: Envoy image.
  value: envoyproxy/envoy:v1.16.1
- name: ENVOY_CONFIG_CM_NAME
  description: ConfigMap containing Envoy config file
  value: apicurio-registry-envoy-config
- name: TENANT_MANAGER_ENVOY_CONFIG_CM_NAME
  description: ConfigMap containing Envoy config file for tenant-manager
  value: tenant-manager-envoy-config

# Sentry/GlitchTip
- name: ENABLE_SENTRY
  value: "true"
- name: SENTRY_CONFIG_SECRET_NAME
  description: Name of the secret containing configuration for connecting to Sentry/GlitchTip
  value: "sentry-dsn-secret"
- name: SENTRY_CONFIG_SECRET_KEY_DSN
  description: Name of the key in the secret above, containing Sentry/GlitchTip `dsn`
  value: "sentry-dsn"

- name: CORS_ALLOWED_ORIGINS
  description: List of allowed origins for CORS. The expected value is a regex to be used as a pattern.
  value: ""

  # Tenant Manager Reaper Configuration
- name: TENANT_MANAGER_REAPER_CHECK_PERIOD_DURATION_EXPR
  value: "1m"
- name: TENANT_MANAGER_REAPER_PERIOD_SECONDS
  value: "10800" # 3 * 60 * 60 = 3 hours
- name: TENANT_MANAGER_REAPER_MAX_TENANTS_REAPED_COUNT
  value: "100"
